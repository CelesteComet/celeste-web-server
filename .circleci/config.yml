version: 2
jobs:
  build:
    docker:
      - image: circleci/golang
    working_directory: ~/go/src/github.com/CelesteComet/celeste-web-server
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "f5:93:91:c1:eb:be:f0:62:8f:71:7a:7c:4e:ed:b0:4c"
      - run:
          name: Setup Environment
          command: |
            echo 'export BUILD_NUM=0.1.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
            echo 'export TAG=latest' >> $BASH_ENV
            echo 'export IMAGE_NAME=celeste-web-server' >> $BASH_ENV 
            echo 'export DOCKER_NAME=brucewong21' >> $BASH_ENV
            echo 'export PORT_TO_CONTAINER_MAP=80:8080' >> $BASH_ENV
            echo 'export AWS_DB_USERNAME=$AWS_DB_USERNAME' >> $BASH_ENV
            echo 'export AWS_DB_PASSWORD=$AWS_DB_PASSWORD' >> $BASH_ENV
      - run:
          name: Fetch Dependencies
          command: |
            go get
            go get github.com/lib/pq
            go get github.com/gorilla/mux
            go get github.com/gorilla/handlers
            go get github.com/jmoiron/sqlx
            go get github.com/CelesteComet/celeste-web-server/app
            go get github.com/CelesteComet/celeste-web-server/routes
      - run:
          name: Run Tests
          command: |
            go test
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and push Docker image
          command: |
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            docker build -t $IMAGE_NAME:$TAG .
            docker tag $IMAGE_NAME:$TAG brucewong21/$IMAGE_NAME:$TAG
            docker push brucewong21/$IMAGE_NAME:$TAG
            echo 'Docker image pushed to Docker Hub'
      - run:
          name: SSH to AWS and run deploy.sh
          command: |
            ssh -o StrictHostKeyChecking=no ec2-user@ec2-3-82-107-155.compute-1.amazonaws.com "/bin/bash ./deploy_app.sh $DOCKER_NAME/$IMAGE_NAME:$TAG $IMAGE_NAME $PORT_TO_CONTAINER_MAP"
            echo 'Docker deploy script started'
